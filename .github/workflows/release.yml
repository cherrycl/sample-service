name: Create Release
on:
  push:
    tags:
      - 'v*'
      - '!v*-dev*'
jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    env:
      TAG_NAME: ${{ github.ref_name }}
    steps:
      - uses: actions/checkout@v3
      - name: Generate Body File
        id: notes
        run: |
          if [ -f "CHANGELOG.md" ]; then
            rm -rf release-body.md
            release=
            next=
            while read -r version; do
              if [[ "$version" =~ "$TAG_NAME" ]]; then
                release="$version"
              else
                if [[ "$next" == "" ]]; then
                  next="$version"
                fi
              fi
            done < <(grep -n "## \[v" CHANGELOG.md)
            l1=$(echo "$release" | cut -d: -f1)
            l2=$(echo "$next" | cut -d: -f1)
            tail -n +$l1 CHANGELOG.md | head -n $((l2-l1)) > release-body.md

            if grep -q "tail: invalid" release-body.md; then
              rm release-body.md
              echo "status=error" >> $GITHUB_OUTPUT
            elif [ $(wc -l release-body.md | awk '{print $1}') -eq 0 ]; then
              rm release-body.md
              echo "status=error" >> $GITHUB_OUTPUT
            else
              echo "status=created" >> $GITHUB_OUTPUT
            fi
          else
            echo "status=error" >> $GITHUB_OUTPUT
          fi
      - name: Create Release with CHANGELOG
        uses: ncipollo/release-action@v1.12.0
        with:
          skipIfReleaseExists: false
          generateReleaseNotes: false
          bodyFile: "release-body.md"
          if: ${{ steps.notes.outputs.status == 'created' }}
      - name: Create Release with Autogenerated Notes
        uses: ncipollo/release-action@v1.12.0
        with:
          skipIfReleaseExists: false
          generateReleaseNotes: true
          if: ${{ steps.notes.outputs.status == 'error' }}